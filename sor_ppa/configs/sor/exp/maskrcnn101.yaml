MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHTS: "pretrained/maskrcnn-R101.pkl"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
  RESNETS:
    DEPTH: 101
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
  FPN:
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[32], [64], [128], [256], [512]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]  # Three aspect ratios (same for all in feature maps)
  RPN:
    IN_FEATURES: ["p2", "p3", "p4", "p5", "p6"]
    PRE_NMS_TOPK_TRAIN: 2000  # Per FPN level
    PRE_NMS_TOPK_TEST: 1000  # Per FPN level
    # Detectron1 uses 2000 proposals per-batch,
    # (See "modeling/rpn/rpn_outputs.py" for details of this legacy issue)
    # which is approximately 1000 proposals per-image since the default batch size for FPN is 2.
    POST_NMS_TOPK_TRAIN: 1000
    POST_NMS_TOPK_TEST: 1000
  ROI_HEADS:
    NAME: "MaskRCNNHeads"
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
    NUM_CLASSES: 1
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_FC: 2
    POOLER_RESOLUTION: 7
  ROI_MASK_HEAD:
    NAME: "MaskRCNNConvUpsampleHead"
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
  
  MASK_ON: True

  SOR:
    NAME: "SelfAttentionWithPosConvCat"
    CONV_DIM: 256
    NUM_CONV: 4
    DENSE_DIM: 1024
    OBJ_DIM: 1024
    TRANSFORMER:
      D_MODEL: 1024
      N_HEAD: 4
      LAYERS: 4


DATASETS:
  TRAIN: ("assr_train",)
  TEST: ("assr_test",)
SOLVER:
  CHECKPOINT_PERIOD: 1000
  IMS_PER_BATCH: 16
  BASE_LR: 1e-4
  STEPS: (42000, 50000)
  MAX_ITER: 54000
INPUT:
  MIN_SIZE_TRAIN: (480,)
  MIN_SIZE_TEST: 480
VERSION: 2

OUTPUT_DIR: "output/sor/exp/maskrcnn-101/"
TEST:
  EVAL_PERIOD: 1000